{"version":3,"sources":["Components/Posts/Post/Post.module.css","Components/Posts/SearchBar/SearchBar.module.css","Components/Posts/Posts.module.css","api/getapi.js","redux/app-reducer.js","Components/Posts/Post/Post.jsx","assets/img/search.svg","Components/Posts/SearchBar/SearchBar.jsx","Components/Posts/Posts.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","request","parameter","axios","get","then","response","getapi","getPosts","getUsers","INITIALIZED_SUCCESS","SET_DATA","initialState","initialized","posts","appReducer","state","action","type","map","post","user","users","find","userId","id","name","username","Post","props","className","style","postsItem","postsItemTitle","title","postsItemText","text","postsItemAuthor","userName","SearchBar","currentInputValue","changeText","e","setState","target","value","filterUsers","searchBar","onSubmit","preventDefault","src","bgSearch","alt","onInput","this","placeholder","aria-label","aria-describedby","React","Component","Posts","inputValue","filteredPost","filter","toLowerCase","includes","body","connect","app","isInitialize","initializeApp","dispatch","a","getApi","responsePosts","responseUsers","data","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,eAAiB,6BAA6B,cAAgB,4BAA4B,gBAAkB,gC,mBCAlKD,EAAOC,QAAU,CAAC,UAAY,+B,6DCA9BD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAa,0BAA0B,oBAAoB,iCAAiC,mBAAmB,gCAAgC,qBAAqB,oC,+JCEvNC,EAAU,SAACC,GACX,OAAOC,IAAMC,IAFL,wCAEeF,GAAWG,MAAK,SAAAC,GAAQ,OAAIA,MAQxCC,EALA,CACXC,SAAU,kBAAMP,EAAQ,WACxBQ,SAAU,kBAAMR,EAAQ,YCPtBS,EAAsB,gCACtBC,EAAW,qBAEbC,EAAe,CACfC,aAAa,EACbC,MAAO,MA6CIC,EA1CI,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACjD,OAAQA,EAAOC,MACX,KAAKR,EACD,OAAO,2BACAM,GADP,IAEIH,aAAa,IAGrB,KAAKF,EACD,IAAIG,EAAOG,EAAOH,MAAMK,KAAI,SAAAC,GACzB,IAAIC,EAAOJ,EAAOK,MAAMC,MAAK,SAAAF,GAAI,OAAID,EAAKI,SAAWH,EAAKI,MAC1D,OAAO,2BAAIL,GAAX,IAAiBM,KAAML,EAAKM,cAG/B,OAAO,2BAAIX,GAAX,IAAkBF,MAAM,YAAKA,KAEjC,QACI,OAAOE,I,uDCZJY,EAZF,SAACC,GACV,OACI,qBAAKC,UAAU,+BAAf,SACI,qBAAIA,UAAWC,IAAMC,UAArB,UACI,oBAAIF,UAAWC,IAAME,eAArB,SAAsCJ,EAAMK,QAC5C,mBAAGJ,UAAWC,IAAMI,cAApB,SAAoCN,EAAMO,OAC1C,sBAAMN,UAAWC,IAAMM,gBAAvB,SAAyCR,EAAMS,iB,iBCThD,MAA0B,mCCyC1BC,E,4MApCXvB,MAAQ,CACJwB,kBAAmB,I,EAGvBC,WAAa,SAACC,GACV,EAAKC,SAAS,CAACH,kBAAmBE,EAAEE,OAAOC,QAC3C,EAAKhB,MAAMiB,YAAYJ,EAAEE,OAAOC,Q,uDAIhC,OACI,yBAASf,UAAWC,IAAMgB,UAA1B,SACI,qBAAKjB,UAAU,+BAAf,SACI,qBAAKA,UAAU,qDAAf,SACI,sBAAMA,UAAU,0BACVkB,SAAU,SAACN,GACPA,EAAEO,kBAFZ,SAKI,sBAAKnB,UAAU,eAAf,UACI,sBAAMA,UAAU,2BAA2BL,GAAG,eAA9C,SACI,qBAAKyB,IAAKC,EAAUC,IAAI,OAE5B,uBAAOlC,KAAK,SAASY,UAAU,eACxBuB,QAASC,KAAKb,WAAYI,MAAOS,KAAKd,kBACtCe,YAAY,sBAAsBC,aAAW,SAC7CC,mBAAiB,gC,GA3BhCC,IAAMC,WCGxBC,E,4MACF5C,MAAQ,CACJF,MAAO,EAAKe,MAAMf,O,EAGtBgC,YAAc,SAACe,GACX,GAAmB,KAAfA,EAAmB,CACnB,IAAIC,EAAe,EAAKjC,MAAMf,MACzBiD,QAAO,SAAA3C,GAAI,OAAIA,EAAKM,KAAKsC,cAAcC,SAASJ,EAAWG,kBAChE,EAAKrB,SAAS,CAAC7B,MAAM,YAAKgD,UAE1B,EAAKnB,SAAS,CAAC7B,MAAM,YAAK,EAAKe,MAAMf,U,uDAMzC,IAAIA,EAAQwC,KAAKtC,MAAMF,MAClBK,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAoBc,MAAOd,EAAKc,MAAOE,KAAMhB,EAAK8C,KAAM5B,SAAUlB,EAAKM,MAA5DN,EAAKK,OACjC,OACI,sBAAKK,UAAU,sBAAf,UACI,cAAC,EAAD,CAAWgB,YAAaQ,KAAKR,cAE7B,qBAAKhB,UAAU,YAAf,SACI,qBAAKA,UAAU,UAAf,SACShB,a,GAzBT4C,IAAMC,WAwCXQ,eANS,SAACnD,GACrB,MAAO,CACHF,MAAOE,EAAMoD,IAAItD,SAIe,GAAzBqD,CAA6BP,GC5B7BO,eANO,SAACnD,GACrB,MAAO,CACLqD,aAAcrD,EAAMoD,IAAIvD,eAIW,CAACyD,cL0BX,yDAAM,WAAOC,GAAP,iBAAAC,EAAA,sEACLC,EAAOjE,WADF,cAC3BkE,EAD2B,gBAELD,EAAOhE,WAFF,OAE3BkE,EAF2B,OAG/BJ,GAXazD,EAWI4D,EAAcE,KAXXtD,EAWiBqD,EAAcC,KAV7C,CACF1D,KAAMP,EACNG,QAAOQ,WASXuD,QAAQC,IAAI,CAACJ,EAAeC,IAAgBtE,KAAKkE,EAhB1C,CACHrD,KAAMR,KAWqB,iCARnB,IAACI,EAAOQ,IAQW,OAAN,wDK1Bd6C,EAdH,SAACtC,GAGX,OADAA,EAAMyC,gBACFzC,EAAMwC,aAGH,cAAC,EAAD,IAFE,QCGIU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,eCHRO,EAAWC,YAAgB,CAACpB,IAAKrD,IAIxB0E,EAFDC,YAAYH,EAAUI,YAAgBC,M,MCGpDC,IAASC,OACL,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,MAERM,SAASC,eAAe,SAOxBjB,M","file":"static/js/main.1bccf11a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsItem\":\"Post_postsItem__2y1r0\",\"postsItemTitle\":\"Post_postsItemTitle__18N-r\",\"postsItemText\":\"Post_postsItemText__2hmge\",\"postsItemAuthor\":\"Post_postsItemAuthor__3aiN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__1Q3g3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsList\":\"Posts_postsList__LCipn\",\"posts-item\":\"Posts_posts-item__fDp4x\",\"posts-item__title\":\"Posts_posts-item__title__CrXsK\",\"posts-item__text\":\"Posts_posts-item__text__1e8DB\",\"posts-item__author\":\"Posts_posts-item__author__fhKhS\"};","import axios from \"axios\";\r\n\r\nconst url = \"https://jsonplaceholder.typicode.com/\";\r\nlet request = (parameter) =>{\r\n    return axios.get(url + parameter).then(response => response);\r\n}\r\n\r\nconst getapi = {\r\n    getPosts: () => request(\"posts/\"),\r\n    getUsers: () => request(\"users/\"),\r\n}\r\n\r\nexport default getapi;","import getApi from \"../api/getapi\";\r\n\r\nconst INITIALIZED_SUCCESS = \"Posts/app/INITIALIZED_SUCCESS\"\r\nconst SET_DATA = \"Posts/app/SET_DATA\"\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    posts: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        case SET_DATA:{\r\n            let posts= action.posts.map(post => {\r\n               let user = action.users.find(user => post.userId === user.id);\r\n               return {...post, name: user.username}\r\n            });\r\n\r\n            return {...state, posts: [...posts]}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    }\r\n}\r\nconst setData = (posts, users) => {\r\n    return{\r\n        type: SET_DATA,\r\n        posts, users\r\n    }\r\n}\r\n\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let responsePosts = await getApi.getPosts();\r\n    let responseUsers = await getApi.getUsers();\r\n    dispatch(setData(responsePosts.data, responseUsers.data));\r\n    Promise.all([responsePosts, responseUsers]).then(dispatch(initializedSuccess()));\r\n}\r\n\r\nexport default appReducer;","import React from \"react\";\r\nimport style from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"col-lg-4 col-md-6  col-sm-12\">\r\n            <li className={style.postsItem}>\r\n                <h3 className={style.postsItemTitle}>{props.title}</h3>\r\n                <p className={style.postsItemText}>{props.text}</p>\r\n                <span className={style.postsItemAuthor}>{props.userName}</span>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","export default __webpack_public_path__ + \"static/media/search.745e2790.svg\";","import React from \"react\";\r\nimport style from \"./SearchBar.module.css\"\r\nimport bgSearch from \"./../../../assets/img/search.svg\"\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        currentInputValue: \"\",\r\n    };\r\n\r\n    changeText = (e) => {\r\n        this.setState({currentInputValue: e.target.value});\r\n        this.props.filterUsers(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className={style.searchBar}>\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <div className=\"container d-block d-lg-flex justify-content-center\">\r\n                        <form className=\"d-flex row g-2 col-lg-4\"\r\n                              onSubmit={(e) => {\r\n                                  e.preventDefault();\r\n                              }}\r\n                        >\r\n                            <div className=\"input-group \">\r\n                                <span className=\"input-group-text bg-body\" id=\"basic-addon1\">\r\n                                    <img src={bgSearch} alt=\"\"/>\r\n                                </span>\r\n                                <input type=\"search\" className=\"form-control\"\r\n                                       onInput={this.changeText} value={this.currentInputValue}\r\n                                       placeholder=\"Filter by author...\" aria-label=\"search\"\r\n                                       aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport style from \"./Posts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\nimport Test from \"./SearchBar/Test/Test\";\r\n\r\nclass Posts extends React.Component {\r\n    state = {\r\n        posts: this.props.posts\r\n    }\r\n\r\n    filterUsers = (inputValue) => {\r\n        if (inputValue !== \"\") {\r\n            let filteredPost = this.props.posts\r\n                .filter(post => post.name.toLowerCase().includes(inputValue.toLowerCase()));\r\n            this.setState({posts: [...filteredPost]});\r\n        } else {\r\n            this.setState({posts: [...this.props.posts]});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //Get array posts from local state and convert this to JSX\r\n        let posts = this.state.posts\r\n            .map(post => <Post key={post.id} title={post.title} text={post.body} userName={post.name}/>);\r\n        return (\r\n            <div className=\"bg-light min-vh-100\">\r\n                <SearchBar filterUsers={this.filterUsers}/>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row g-3\">\r\n                            {posts}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.app.posts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Posts);","import \"./App.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Posts from \"./Components/Posts/Posts\";\r\n\r\nconst App = (props) => {\r\n\r\n  props.initializeApp();\r\n  if(!props.isInitialize){\r\n    return null\r\n  }\r\n  return <Posts />\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isInitialize: state.app.initialized\r\n  }\r\n\r\n}\r\nexport default connect(mapStateToProps,{initializeApp})(App);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({app: appReducer})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\ndocument.getElementById('root')\r\n)\r\n;\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}