{"version":3,"sources":["Components/Posts/SearchBar/SearchBar.module.css","api/getapi.js","redux/app-reducer.js","redux/store.js","Components/Posts/Post/Post.jsx","assets/img/search.svg","Components/Posts/SearchBar/SearchBar.jsx","Components/Posts/Posts.jsx","App.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","getapi","getPosts","getUsers","INITIALIZED_SUCCESS","SET_DATA","initialState","initialized","posts","appReducer","state","action","type","map","post","user","users","find","userId","id","name","username","reducers","combineReducers","app","store","createStore","applyMiddleware","thunkMiddleware","Post","props","className","title","text","userName","SearchBar","currentInputValue","changeText","e","setState","target","value","filterUsers","style","searchBar","form","onSubmit","preventDefault","src","bgSearch","alt","onInput","this","placeholder","aria-label","aria-describedby","React","Component","Posts","inputValue","filteredPost","filter","toLowerCase","includes","body","connect","isInitialize","initializeApp","dispatch","a","getApi","responsePosts","responseUsers","data","Promise","all","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.905e7494.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__1Q3g3\",\"form\":\"SearchBar_form__2JDnY\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n});\r\n\r\nconst getapi = {\r\n    getPosts: () => instance(\"posts/\"),\r\n    getUsers: () => instance(\"users/\"),\r\n};\r\n\r\nexport default getapi;","import getApi from \"../api/getapi\";\r\n\r\nconst INITIALIZED_SUCCESS = \"Posts/app/INITIALIZED_SUCCESS\"\r\nconst SET_DATA = \"Posts/app/SET_DATA\"\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    posts: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        case SET_DATA:{\r\n            let posts= action.posts.map(post => {\r\n               let user = action.users.find(user => post.userId === user.id);\r\n               return {...post, name: user.username}\r\n            });\r\n\r\n            return {...state, posts: [...posts]}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    }\r\n}\r\nconst setData = (posts, users) => {\r\n    return{\r\n        type: SET_DATA,\r\n        posts, users\r\n    }\r\n}\r\n\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let responsePosts = await getApi.getPosts();\r\n    let responseUsers = await getApi.getUsers();\r\n    dispatch(setData(responsePosts.data, responseUsers.data));\r\n    Promise.all([responsePosts, responseUsers]).then(dispatch(initializedSuccess()));\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({app: appReducer})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;","import React from \"react\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body \">\r\n                    <h5 className=\"card-title text-primary\">{props.title}</h5>\r\n                    <p className=\"card-text\">{props.text}</p>\r\n                    <p className=\"card-text\"><small className=\"text-muted\">{props.userName}</small></p>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Post;","export default __webpack_public_path__ + \"static/media/search.745e2790.svg\";","import React from \"react\";\r\nimport style from \"./SearchBar.module.css\"\r\nimport bgSearch from \"./../../../assets/img/search.svg\"\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        currentInputValue: \"\",\r\n    };\r\n\r\n    changeText = (e) => {\r\n        this.setState({currentInputValue: e.target.value});\r\n        this.props.filterUsers(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className={style.searchBar}>\r\n                <nav className=\"navbar navbar-light bg-light d-block\">\r\n                    <div className=\"container-sm d-block d-lg-flex justify-content-center\">\r\n                        <form className={\"d-flex col-lg-4 \" + style.form}\r\n                              onSubmit={(e) => {\r\n                                  e.preventDefault();\r\n                              }}\r\n                        >\r\n                            <div className=\"input-group\">\r\n                                <span className=\"input-group-text bg-body\" id=\"basic-addon1\">\r\n                                    <img src={bgSearch} alt=\"\"/>\r\n                                </span>\r\n                                <input type=\"search\" className=\"form-control\"\r\n                                       onInput={this.changeText} value={this.currentInputValue}\r\n                                       placeholder=\"Filter by author...\" aria-label=\"search\"\r\n                                       aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport \"./cardColumns.css\"\r\nimport Post from \"./Post/Post\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\n\r\nclass Posts extends React.Component {\r\n    state = {\r\n        posts: this.props.posts\r\n    }\r\n\r\n    filterUsers = (inputValue) => {\r\n        if (inputValue !== \"\") {\r\n            let filteredPost = this.props.posts\r\n                .filter(post => post.name.toLowerCase().includes(inputValue.toLowerCase()));\r\n            this.setState({posts: [...filteredPost]});\r\n        } else {\r\n            this.setState({posts: [...this.props.posts]});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //Get array posts from local state and convert this to JSX\r\n        let posts = this.state.posts\r\n            .map(post => <Post key={post.id} title={post.title} text={post.body} userName={post.name}/>);\r\n\r\n        return (\r\n            <div className=\"bg-light min-vh-100\">\r\n                <SearchBar filterUsers={this.filterUsers}/>\r\n                <div className=\"container-sm\">\r\n                    <div className=\"container\">\r\n                        <div className=\"card-columns\">\r\n                            {posts}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.app.posts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Posts);","import {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Posts from \"./Components/Posts/Posts\";\r\n\r\nconst App = (props) => {\r\n\r\n  props.initializeApp();\r\n  if(!props.isInitialize){\r\n    return null\r\n  }\r\n  return <Posts />\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isInitialize: state.app.initialized\r\n  }\r\n\r\n}\r\nexport default connect(mapStateToProps,{initializeApp})(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport store from \"./redux/store\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"./index.css\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}